<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.DJ.ImplementFactory.NetCore</name>
    </assembly>
    <members>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.Add(System.String,System.Int32,System.Int32,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以100毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_100">执行任务时间间隔,单位:100毫秒</param>
            <param name="whileCount">执行次数, 为零时无限执行,默认值为零</param>
            <param name="action">执行任务</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOfControl(System.String,System.Int32,System.Int32,System.Object,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以100毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_100">执行任务时间间隔,单位:100毫秒</param>
            <param name="whileCount">执行次数, 为零时无限执行,默认值为零</param>
            <param name="instanceOfControl">一个控件的实例</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.Add(System.String,System.Int32,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以100毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_100">执行任务时间间隔,单位:100毫秒</param>
            <param name="action">执行任务</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOfControl(System.String,System.Int32,System.Object,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以100毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_100">执行任务时间间隔,单位:100毫秒</param>
            <param name="instanceOfControl">一个控件的实例</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOf10ms(System.String,System.Int32,System.Int32,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以10毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_10">执行任务时间间隔,单位:10毫秒</param>
            <param name="whileCount">执行次数, 为零时无限执行,默认值为零</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOf10msOfControl(System.String,System.Int32,System.Int32,System.Object,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以10毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_10">执行任务时间间隔,单位:10毫秒</param>
            <param name="whileCount">执行次数, 为零时无限执行,默认值为零</param>
            <param name="instanceOfControl">一个控件的实例</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOf10ms(System.String,System.Int32,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以10毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_10">执行任务时间间隔,单位:10毫秒</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.AsynicTransaction.AddOf10msOfControl(System.String,System.Int32,System.Object,System.Action{System.DJ.ImplementFactory.Commons.AsynicData})">
            <summary>
            向计时器添加一个以10毫秒为间隔的执行任务
            </summary>
            <param name="taskName">任务名称</param>
            <param name="milliseconds_10">执行任务时间间隔,单位:10毫秒</param>
            <param name="instanceOfControl">一个控件的实例</param>
            <param name="action">执行任务</param>
            <returns></returns>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.AsynicElement.WhileCount">
            <summary>
            循环次数, 0 = 无限
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoCall">
            <summary>
            Enable dependency injection mechanism.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.#ctor">
            <summary>
            Enable dependency injection mechanism.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.#ctor(System.String,System.Boolean)">
            <summary>
            Enable dependency injection mechanism.
            </summary>
            <param name="MatchRuleOrClassName">Set object name matching rules or specify class names</param>
            <param name="IgnoreCase">Ignore class name capitalization</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.#ctor(System.String)">
            <summary>
            Enable dependency injection mechanism.
            </summary>
            <param name="MatchRuleOrClassName">Set object name matching rules or specify class names</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.LoadBeforeFilter(System.Type)">
            <summary>
            AOP机制，加载接口实例前被调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <returns>Bool类型，返回true时允许继续加载实例，返回false时阻止加载当前接口实例</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.LoadAfterFilter``1(``0)">
            <summary>
            AOP机制，加载接口实例后被调用
            </summary>
            <typeparam name="T">接口实例类型</typeparam>
            <param name="impl">接口实例</param>
            <returns>Bool类型，返回true时允许把已加载的接口实例赋给类成员接口变量，反之异然</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteBeforeFilter(System.Type,System.Reflection.MethodBase,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para})">
            <summary>
            AOP机制，执行接口方法前被调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="sourceMethod">调用接口方法的源方法</param>
            <param name="implement">接口实例</param>
            <param name="methodName">当前执行的接口方法</param>
            <param name="paras">接口参数</param>
            <returns>Bool类型，返回true时允许继续执行接口方法，反之异然</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteBeforeFilter(System.Type,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para})">
            <summary>
            AOP机制，执行接口方法前被调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="implement">接口实例</param>
            <param name="methodName">当前执行的接口方法</param>
            <param name="paras">接口参数</param>
            <returns>Bool类型，返回true时允许继续执行接口方法，反之异然</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteAfterFilter(System.Type,System.Reflection.MethodBase,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para},System.Object)">
            <summary>
            AOP机制，执行接口方法后被调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="sourceMethod">调用接口方法的源方法</param>
            <param name="implement">接口实例</param>
            <param name="methodName">当前执行的接口方法</param>
            <param name="paras">接口参数</param>
            <param name="result">接口方法返回值</param>
            <returns>Bool类型，返回true时允许把执行接口方法后的结果返回给调用者，反之异然</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteAfterFilter(System.Type,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para},System.Object)">
            <summary>
            AOP机制，执行接口方法后被调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="implement">接口实例</param>
            <param name="methodName">当前执行的接口方法</param>
            <param name="paras">接口参数</param>
            <param name="result">接口方法返回值</param>
            <returns>Bool类型，返回true时允许把执行接口方法后的结果返回给调用者，反之异然</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteException(System.Type,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para},System.Exception,System.DJ.ImplementFactory.Commons.ErrorLevels)">
            <summary>
            AOP机制，执行接口方法发生异常时调用，拦截异常信息
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="implement">接口实例</param>
            <param name="methodName">当前执行的接口方法</param>
            <param name="paras">接口参数</param>
            <param name="ex">异常信息</param>
            <param name="errorLevels">异常信息等级: lesser[次要的], normal[普通的], dangerous[危险的], severe[严重的]</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.LogsRange.upperLimit">
            <summary>
            上限值
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.LogsRange.lowerLimit">
            <summary>
            下限值
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecuteInterfaceMethodCodeString(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.String@)">
            <summary>
            在接口代理方法内自定义执行实例接口方法及数据处理代码
            </summary>
            <param name="method">接口方法信息对象</param>
            <returns>string类型，返回自定义执行接口方法及数据处理代码字符串</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.CreateInstanceByInterface(System.Type,System.Type,System.DJ.ImplementFactory.Commons.Attrs.AutoCall,System.Int32)">
            <summary>
            每次根据接口创建待装配的实例对象时调用
            </summary>
            <param name="interfaceType">接口类型</param>
            <param name="implementType">接口实例对象类型</param>
            <param name="autoCall">AutoCall对象</param>
            <param name="tempImplementCount">接口临时实例数量</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ExecInterfaceMethodOfCodeStr_DataOpt(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.DataOptType,System.String,System.String@)">
            <summary>
            执行select、insert、update、delete数据操作时被调用
            </summary>
            <param name="method">接口方法信息对象</param>
            <param name="dataOptType">数据操作类型select|insert|update|delete</param>
            <param name="sql">sql语句表达式</param>
            <param name="code">接口方法代码相关代码字符串</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.GetSqlByDataProvider(System.DJ.ImplementFactory.Pipelines.ISqlExpressionProvider,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para},System.DJ.ImplementFactory.Pipelines.Pojo.DbList{System.Data.Common.DbParameter},System.DJ.ImplementFactory.Commons.Attrs.AutoCall,System.DJ.ImplementFactory.Pipelines.DataOptType,System.String@)">
            <summary>
            当执行接口方法时,根据数据提供者获取sql语句表达式(动态创建sql语句)
            </summary>
            <param name="dataProvider">sql语句数据提供者</param>
            <param name="paraList">接口方法参数集合</param>
            <param name="dbParameters">sql语句参数集合</param>
            <param name="autoCall">AutoCall对象</param>
            <param name="dataOptType">数据操作类型select|insert|update|delete</param>
            <param name="sql">返回sql语句提供者动态生成的sql语句</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.GetDataProvider(System.String,System.String,System.DJ.ImplementFactory.Commons.Attrs.AutoCall)">
            <summary>
            根据名称空间和类名获取sql语句提供者接口实例
            </summary>
            <param name="dataProviderNamespace">sql语句提供者接口实例所属名称空间</param>
            <param name="dataProviderClassName">sql语句提供者接口实例类名称</param>
            <param name="autoCall">AutoCall对象</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.GetDbParaListByEntity(System.Reflection.MethodInfo,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.DbList{System.Data.Common.DbParameter},System.DJ.ImplementFactory.Commons.EList{System.DJ.ImplementFactory.Commons.CKeyValue})">
            <summary>
            根据数据实体(接口方法参数中包含)和带参数的sql语句中包含的参数集合来创建DbParameter集合
            </summary>
            <param name="methodInfo">所属方法(父方法)</param>
            <param name="entity">数据实体(接口方法参数)</param>
            <param name="entityParaName">实体对应的参数名称</param>
            <param name="dbParas">DbParameter集合</param>
            <param name="paraNameList">带参数的sql包含的参数集合</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.GetDbParaByBaseType(System.Type,System.String,System.Object,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.DbList{System.Data.Common.DbParameter})">
            <summary>
            用数据实体中属于基本类型(int,string,bool等)的属性及其值来创建DbParameter集合
            </summary>
            <param name="dataType">数据类型(数据实体属性类型)</param>
            <param name="dbTag">数据源参数类型(如:sqlserver参数类型为@, mysql参数类型为?, oracle为:)</param>
            <param name="data">数据源属性值</param>
            <param name="fieldName">sql语句中字段名称(同时也是数据实体属性名称)</param>
            <param name="dbParas">DbParameter集合</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ReplaceGenericSign(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.Pojo.LeftSpaceLevel,System.String,System.String,System.String@,System.String@)">
            <summary>
            当为泛型方法时,替换 sql 表达式中的泛型标识, 例: select * from {T} order by id asc
            </summary>
            <param name="method">泛型方法</param>
            <param name="sqlVarName"></param>
            <param name="leftSpaceLevel"></param>
            <param name="code"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.ReplaceGenericPara(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.DbList{System.Data.Common.DbParameter},System.String@)">
            <summary>
            当为泛型参数时, 编译时被引用, 替换 sql 表达式中的 {field} 标识及 @field/?field/:field 等标识
            </summary>
            <param name="method"></param>
            <param name="sqlVarName"></param>
            <param name="dbParameters1"></param>
            <param name="sql"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCall.SetDataProviderAssemble(System.String)">
            <summary>
            设置数据提供者程序集相对路径(dll文件相对路径),默认为当前程序集
            </summary>
            <param name="dllRelativePath"></param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoCount">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="countExpression">A valid data quantity statistics SQL query statement.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.Boolean)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="countExpression">A valid data quantity statistics SQL query statement.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String[])">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="countExpression">A valid data quantity statistics SQL query statement.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="countExpression">A valid data quantity statistics SQL query statement.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String,System.String[])">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoCount.#ctor(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Data quantity statistics SQL query statement property identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="deleteExpression">A valid delete statement expression</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="deleteExpression">A valid delete statement expression</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType,System.Boolean)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="deleteExpression">A valid delete statement expression</param>
            <param name="sqlExecType">SQL expression execution type.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.Boolean)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="deleteExpression">delete 语句表达式</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.String)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoDelete.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Removes the data SQL statement expression attribute identification.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[])">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation.default is exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation,default is exclude.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="insertExpression">A valid SQL statement expression that performs an insert data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the insert data operation,default is exclude.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoInsert.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Insert data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.Boolean,System.Int32)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[])">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String[],System.Boolean,System.Int32)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="sqlExpression">A valid SQL statement expression that performs an procedure data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoProcedure.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            The identifier of the SQL statement expression property that performs the Procedure data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.Boolean)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String[])">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String[],System.Boolean,System.Int32)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="selectExpression">A valid SQL query statement expression</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String,System.String[])">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoSelect.#ctor(System.String,System.String,System.String[],System.Boolean,System.Int32)">
            <summary>
            The expression attribute of the execution SQL query statement is identified, and the execution result type can be a basic data type, a data entity type, and a data entity collection type.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="ResultExecMethod">The array must contain 2 or 3 array elements, 2 array elements: [0] the full path of the class, [2] method name; 3 array element cases: [0] namespace, [1] class name, [2] method name. The method parameter type must be a valid data query result type, and the method return value type must match the main method return value type.</param>
            <param name="isAsync">Whether to load data asynchronously, if data is loaded asynchronously, the last parameter type of the method must be the Action type, and the data type passed in matches the query result.</param>
            <param name="msInterval"></param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.DataOptType,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation.</param>
            <param name="fieldsType">Indicates whether each data element (field name) contained in the field name array is Exclude or Contain when performing data operations, which defaults to Exclude.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[])">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String[],System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="updateExpression">A valid SQL statement expression that performs an update data operation.</param>
            <param name="fields">An array of valid field name strings. Field names that must be excludedincluded when performing the update data operation,default is exclude.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String,System.DJ.ImplementFactory.Pipelines.DataOptType)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="sqlExecType">SQL expression execution type.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.AutoUpdate.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            The identifier of the SQL statement expression property that performs the Update data operation.
            </summary>
            <param name="dataProviderNamespace">SQL query statements provide the namespace in which the class resides.</param>
            <param name="dataProviderClassName">The sql query statement provides the class name of the class, which must inherit the ISqlExpressionProvider interface class.</param>
            <param name="EnabledBuffer">Whether to enable caching, default is false (not enabled)</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.Condition">
            <summary>
            where 条件解析属性,默认情况下采用对象属性做为字段名,采用等号(=)做为比较符,采用and做为逻辑连接符
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.Condition.TableSign">
            <summary>
            设置/获取表名或表名标识
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.Unit(System.DJ.ImplementFactory.Commons.Attrs.Condition.PropertyInfoExt)">
            <summary>
            获取条件单元
            </summary>
            <param name="propertyInfo">对象属性</param>
            <returns></returns>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.Condition.And_Or">
            <summary>
            获取 and 或者 or
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons">
            <summary>
            忽视属性值
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign">
            <summary>
            and 或者 or 逻辑连接符
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign,System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="fieldMapping">映射的数据表字段名称,为空时等同于属性名称</param>
            <param name="compareSign">比较符号,可为: like, left_like(llike), right_like(rlike), 大于, 大于等于, 小于, 小于等于, 等于, 不等于</param>
            <param name="logicSign">逻辑连接符</param>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.FieldCompare(System.String)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="field_compare">可以是字段映射，也可是比较符</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="field_compare">可以是字段映射，也可是比较符</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.String)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="fieldMapping">映射的字段名称</param>
            <param name="compareSign">比较符号,可为: like, left_like(llike), right_like(rlike), 大于等于, 小于等于, 不等于</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="fieldMapping">映射的字段名称</param>
            <param name="compareSign">比较符号,可为: like, left_like(llike), right_like(rlike), 大于等于, 小于等于, 不等于</param>
            <param name="logicSign">逻辑连接符</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="fieldMapping">映射的字段名称</param>
            <param name="compareSign">比较符号,可为: like, left_like(llike), right_like(rlike), 大于等于, 小于等于, 不等于</param>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign,System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="field_compare">可以是字段映射，也可是比较符</param>
            <param name="logicSign">逻辑连接符</param>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign,System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="logicSign">逻辑连接符</param>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="field_compare">可以是字段映射，也可是比较符</param>
            <param name="logicSign">逻辑连接符</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.String,System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="field_compare">可以是字段映射，也可是比较符</param>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.DJ.ImplementFactory.Commons.Attrs.Condition.LogicSign)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="logicSign">条件逻辑连接符</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor(System.DJ.ImplementFactory.Commons.Attrs.Condition.WhereIgrons)">
            <summary>
            where 条件解析属性
            </summary>
            <param name="whereIgrons">设置忽视属性值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.Condition.#ctor">
            <summary>
            where 条件解析属性,默认情况下采用对象属性做为字段名,采用等号(=)做为比较符,采用and做为逻辑连接符,不忽视任何值
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.DbConfigAction.#ctor">
            <summary>
            Identifies an interface method that can set the database connection string with the database type
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.DbConfigAction.#ctor(System.String,System.String)">
            <summary>
            Identifies an interface method that can set the database connection string with the database type
            </summary>
            <param name="dbConnectionStringMapping">The parameter name of the dbConeectionString mapping</param>
            <param name="dbTypeMapping">The parameter name of the dbType mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.ExistCall">
            <summary>
            如果接口已存在对应的实例，侧直接使用该实例给成员变量赋值(无法拦截接口方法及异常信息)
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String,System.Type)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
            <param name="fieldType">The data type of the data table field</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String,System.Type,System.Int32)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
            <param name="fieldType">The data type of the data table field</param>
            <param name="length">The data length of the data table field, if exist</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String,System.Type,System.Int32,System.String)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
            <param name="fieldType">The data type of the data table field</param>
            <param name="length">The data length of the data table field, if exist</param>
            <param name="defaultValue">The initial default value for the data table field</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String,System.Type,System.Int32,System.String,System.Boolean)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
            <param name="fieldType">The data type of the data table field</param>
            <param name="length">The data length of the data table field, if exist</param>
            <param name="defaultValue">The initial default value for the data table field.</param>
            <param name="IsPrimaryKey">Whether this datasheet field is a primary key</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.#ctor(System.String,System.Type,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Table field names are associated with attribute mappingsProperty identification.
            </summary>
            <param name="fieldName">Data table field names.</param>
            <param name="fieldType">The data type of the data table field</param>
            <param name="length">The data length of the data table field, if exist</param>
            <param name="defaultValue">The initial default value for the data table field.</param>
            <param name="IsPrimaryKey">Whether this datasheet field is a primary key</param>
            <param name="NoNull">Whether this datasheet field is not allowed to be null</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.FieldName">
            <summary>
            Data table field names.
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.FieldType">
            <summary>
            The data type of the data table field
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.Length">
            <summary>
            The data length of the data table field, if exist.
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.DefualtValue">
            <summary>
            The initial default value for the data table field.
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.IsPrimaryKey">
            <summary>
            Whether this datasheet field is a primary key.
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.FieldMapping.NoNull">
            <summary>
            Whether this datasheet field is not allowed to be null
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField">
            <summary>
            Identifies data model properties that do not participate in the specified data operations
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.IgnoreType.Insert">
            <summary>
            Does not participate in data insertion operations
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.IgnoreType.Update">
            <summary>
            Does not participate in data update operations
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.IgnoreType.Procedure">
            <summary>
            Does not participate in joining stored procedure parameters
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.IgnoreType.All">
            <summary>
            Does not participate in all data operations
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.ignoreType">
            <summary>
            Set up data operations that do not participate
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.#ctor(System.DJ.ImplementFactory.Commons.Attrs.IgnoreField.IgnoreType)">
            <summary>
            Identifies data model properties that do not participate in the specified data operations
            </summary>
            <param name="ignoreType">Set up data operations that do not participate</param>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ColorTranslation.ColorSimilarDirection.DeepColor">
            <summary>
            深色方向
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ColorTranslation.ColorSimilarDirection.LightColour">
            <summary>
            浅色方向
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ColorTranslation.RGB2CMYK(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            RGB转CMYK
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
            <param name="c"></param>
            <param name="m"></param>
            <param name="y"></param>
            <param name="k"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ColorTranslation.CMYK2RGB(System.Double,System.Double,System.Double,System.Double,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            CMYK转RGB
            </summary>
            <param name="c"></param>
            <param name="m"></param>
            <param name="y"></param>
            <param name="k"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ColorTranslation.RGB2Hex(System.Int32,System.Int32,System.Int32)">
            <summary>
            RGB转#000000
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ColorTranslation.Hex2Color(System.String)">
            <summary>
            #FFFFFF转Color
            </summary>
            <param name="hexColor"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ColorTranslation.SimilarColor(System.Drawing.Color,System.Int32,System.DJ.ImplementFactory.Commons.ColorTranslation.ColorSimilarDirection)">
            <summary>
            获取类似的颜色
            </summary>
            <param name="color">起始颜色</param>
            <param name="SimilarRate">类似率1~254</param>
            <param name="similarDir">颜色取值方向</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.CreateNewTable.exec_sql(System.String)">
            <summary>
            修改表名
            </summary>
            <param name="sql"></param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.fieldNameOfSourceTable">
            <summary>
            参数条件比较的源表字段名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.compareSign">
            <summary>
            比较符号：等于\不等于\大于\大于等于\小于\小于等于\like
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.logicUnion">
            <summary>
            与前一比较逻辑的连接符(and、or)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.valueIsChar">
            <summary>
            值是字符
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.IsEnabledContion">
            <summary>
            通过外部判断当前条件单元是否有效(但不包含群组条件)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataElement.groupLogicUnion">
            <summary>
            群组条件与当前条件单元的连接符(and、or)
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.DataElement._groupCondition">
            <summary>
            群组条件
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataModelMapping.ToObjectFrom``1(System.Object,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataModelMapping.ExecuteStaticMethod(System.String,System.Type[],System.Object[])">
            <summary>
            Reflection calls and executes generic methods
            </summary>
            <param name="methodName">The name of the method</param>
            <param name="genericTypes">An array of generic types for the method</param>
            <param name="methodParameters">An array of parameters for the method</param>
            <returns>Returns the result of the method execution</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataModelMapping.ToObjectData``1(System.Object,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            'Reflection calling' is prohibited for deletion
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcM">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataModelMapping.ToListData``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            'Reflection calling' is prohibited for deletion
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataModelMapping.ToListFrom``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.DataEle.action">
            <summary>
            参数：sql, tableName, DbParameterCollection
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.DataEle.sql_length">
            <summary>
            批量最大 sql 表达式长度
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.analysis(System.DJ.ImplementFactory.Pipelines.IDbHelper,System.DJ.ImplementFactory.Commons.Attrs.AutoCall,System.String,System.Collections.Generic.List{System.Data.Common.DbParameter},System.Action{System.String,System.String,System.Collections.Generic.List{System.Data.Common.DbParameter}})">
            <summary>
            
            </summary>
            <param name="dbHelper"></param>
            <param name="autoCall"></param>
            <param name="sql"></param>
            <param name="dbParameters"></param>
            <param name="action">参数：sql, tableName, DbParameterCollection</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.optByBatchMaxNumber">
            <summary>
            批量操作最大数量
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.optByBatchWaitSecond">
            <summary>
            批量操作时等待时间(秒), 如果等于该时间则强制执行
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.sqlMaxLengthForBatch">
            <summary>
            insert/update/delete 批量操作 sql 表达式最大长度
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.Step01_GetTableName(System.String)">
            <summary>
            获取表名
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.Step02_InvalidBatch(System.String)">
            <summary>
            无效的批量, 判断 sql 语句是否符合批量, true(无效的), false(有效的), 默认 false
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.Step03_GetSqlExpressionOfParamPart(System.String,System.String,System.Int32)">
            <summary>
            多项 sql 语句时, 需要重新生成除第一项外的 sql 项中的参数名称，每一项中的参数名称必须是唯一的
            </summary>
            <param name="sql"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.Step04_SplitCharOfSqlUnit">
            <summary>
            多项 sql 语句时, 项与项之间的分隔符, 默认为英文逗号. 例: insert into user(name,age) values (@name,@age),(@name1,@age1),(@name2,@age2)
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DataOperate.AbsBatch.Step05_GetParameterName(System.String,System.Int32)">
            <summary>
            多项 sql 语句时, 因为 sql 语句中的参数名称被重新命名，所以参数列表里的参数名也必须与之一一对应
            </summary>
            <param name="fieldName"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:System.DJ.ImplementFactory.Commons.DJTools">
            <summary>
            Author: 代久 - Allan
            QQ: 564343162
            Email: 564343162@qq.com
            CreateDate: 2020-03-05
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.getDefaultByType(System.Type)">
            <summary>
            根据类型获取该数据对应的类型默认值
            </summary>
            <param name="type">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetParamertClassNameByDbTag1(System.String,System.String@)">
            <summary>
            根据参数标识(@ : ?)获取参数类名称
            </summary>
            <param name="dbType">参数标识(@ : ?)</param>
            <param name="AssemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetParamertClassNameByDbTag1(System.String)">
            <summary>
            根据参数标识(@ : ?)获取参数类名称
            </summary>
            <param name="dbType">参数标识(@ : ?)</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetWhere(System.Object,System.String,System.Boolean,System.Func{System.DJ.ImplementFactory.Commons.Attrs.Condition.PropertyInfoExt,System.DJ.ImplementFactory.Commons.Attrs.Condition,System.Boolean})">
            <summary>
            创建人:DJ
            日  期:2021-12-02
            根据实体对象获取 where 条件
            </summary>
            <param name="entity"></param>
            <param name="startChar">条件开始字符</param>
            <param name="enableFun">有效性判断,true为有效的条件,false无效的条件</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetWhere(System.Object)">
            <summary>
            创建人:DJ
            日  期:2021-12-02
            根据实体对象获取 where 条件
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetWhere(System.Object,System.String)">
            <summary>
            创建人:DJ
            日  期:2021-12-02
            根据实体对象获取 where 条件
            </summary>
            <param name="entity"></param>
            <param name="startChar">条件开始字符</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetWhere(System.Object,System.Func{System.DJ.ImplementFactory.Commons.Attrs.Condition.PropertyInfoExt,System.DJ.ImplementFactory.Commons.Attrs.Condition,System.Boolean})">
            <summary>
            创建人:DJ
            日  期:2021-12-02
            根据实体对象获取 where 条件
            </summary>
            <param name="entity"></param>
            <param name="enableFun"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.UnBitwiseOR(System.Int32)">
            <summary>
            拆解按位或
            </summary>
            <param name="bitwiseOR">按位或的值</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetSrcTypeMethod(System.Type[])">
            <summary>
            获取调用方法所属类的类型,但要排除指定的类型
            </summary>
            <param name="excludeType">排除指定的类型</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DJTools.GetSrcTypeMethod``1">
            <summary>
            获取调用方法所属类的类型,但要排除指定的类型
            </summary>
            <typeparam name="T">排除指定的类型</typeparam>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.ExecReplaceForSqlByFieldName_Mixed(System.String,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.Para,System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.Func{System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara,System.String})" -->
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.GetReplaceByMixed(System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara,System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation)">
            <summary>
            根据复杂对象获取替换语句
            </summary>
            <param name="funcPara"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.ExecReplaceForSqlByFieldName(System.String@,System.String,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation)">
            <summary>
            替换包含 {FieldName} 的sql语句, 例: update UserInfo set UserName='{UserName}' where id='{id}'
            </summary>
            <param name="sql"></param>
            <param name="sqlVarName">在sql2 = sql2.Replace("{id}",id) 中 sqlVarName = sql2</param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.ExecReplaceForSqlByFieldName(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.String@)">
            <summary>
            泛型参数,当执行接口方法时,已经有值的情况做替换
            </summary>
            <param name="method"></param>
            <param name="sql"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.AddElementToParamerCollectionFromMixed(System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara,System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation)" -->
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.GetParametersBySqlParameter(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.String@,System.String@)" -->
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.MadeExecuteSql(System.String,System.String,System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.DataOptType,System.String@)" -->
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.sqlVarName1">
            <summary>
            sql语句字符串的变量名
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.FieldName1">
            <summary>
            sql语句中包含的字段名称 {FieldName}
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.ParaName1">
            <summary>
            接口方法参数名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.PropertyName">
            <summary>
            如果参数是Dictionary类型,PropertyName为key; 如果参数是类实体对象,PropertyName为该对象的属性名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.PropertyType">
            <summary>
            接口方法参数对象中属性类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeAutoCall.FuncPara.ValueType">
            <summary>
            值类型
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeChange.paraMaxQuantity">
            <summary>
            最大参数数量
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeChange.rgParaField" -->
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeChange.GetSqlParameter(System.String@,System.Func{System.Text.RegularExpressions.Match,System.Boolean},System.Action{System.String,System.String})">
            <summary>
            获取 sql 表达式所包含的参数
            </summary>
            <param name="sql"></param>
            <param name="func"></param>
            <param name="action">fiald, dbTag</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeChange.AnalyzeSql(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.DataOptType,System.String,System.String@)" -->
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.DynamicCode.DynamicCodeTempImpl.InitCode(System.String@,System.String[],System.Func{System.String,System.Collections.Generic.Dictionary{System.String,System.Boolean},System.String})" -->
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.EMethodInfo.SetImplementType(System.Type)">
            <summary>
            Sets the type of the implementation class for the interface class
            </summary>
            <param name="implType">The interface implements the type of the class</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.EMethodInfo.WholeAttributes(System.Type,System.Boolean)">
            <summary>
            Gets the [all or specified] custom properties that act on the method (including the interface method and the implementation class method corresponding to the interface method)
            </summary>
            <param name="attributeType">Specifies the custom property type</param>
            <param name="inherit">Whether to look for subclasses that contain custom properties</param>
            <returns>Returns a collection of custom properties</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.EMethodInfo.GetImplementMethodBy(System.Reflection.MethodInfo,System.Type)">
            <summary>
            Obtain the corresponding method from the interface implementation class based on the method of the interface class
            </summary>
            <param name="interfaceMethod">The methods of the interface</param>
            <param name="implementClass">The interface implements the class type</param>
            <returns>Returns a method in the implementation class that corresponds to the specified interface method</returns>
            <exception cref="T:System.Exception">Throws an exception where the implementation class type of the transferred is not the interface implementation class to which the interface method belongs</exception>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.DynamicCode.EMethodInfo.JudgeTaskMethod(System.Reflection.MethodInfo,System.Boolean@,System.Boolean@,System.Type@)">
            <summary>
            判断是否是 async Task 方法或 Task 方法，及返回方法值类型
            </summary>
            <param name="mi"></param>
            <param name="isAsyncReturn">Task 方法中是否含有 async 标识</param>
            <param name="isTaskReturn">是否是 Task 方法</param>
            <param name="return_type">方法返回值类型</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.DJ.ImplementFactory.Commons.EList`1" -->
        <member name="M:System.DJ.ImplementFactory.Commons.EList`1.ChildList.GetIndexByNewKeyVal(System.DJ.ImplementFactory.Commons.CKeyValue)">
            <summary>
            返回值为-1时，新增项赋加在最末尾，应使用Add方法 
            </summary>
            <param name="ckv"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.EList`1.ChildList.GetIndexByKeyVal(System.String)">
            <summary>
            如果返回 -1 表示key在集合中不存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.DJ.ImplementFactory.Commons.EList`1.ChildList.Compare(System.Int32[],System.Int32[],System.Boolean)" -->
        <member name="F:System.DJ.ImplementFactory.Commons.EMD5.rgbIV">
            <summary>
            用于对称算法的初始化向量（默认值）。
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.EMD5.EncryptDES(System.String,System.String)">
            <summary>
            Encrypts a string
            </summary>
            <param name="encryptString">The string to be encrypted</param>
            <param name="key">The encryption key, which is required to be 8 bits</param>
            <returns>Successful encryption returns the encrypted string, and fails to return the source string</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.EMD5.EncryptDES(System.String)">
            <summary>
            Encrypts a string
            </summary>
            <param name="encryptString">The string to be encrypted</param>
            <returns>Successful encryption returns the encrypted string, and fails to return the source string</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.EMD5.DecryptDES(System.String,System.String)">
            <summary>
            Decrypt the string
            </summary>
            <param name="decryptString">The string to be decrypted</param>
            <param name="key">Decryption key, requires 8 bits</param>
            <returns>Return decrypt the string</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.EMD5.DecryptDES(System.String)">
            <summary>
            Decrypt the string
            </summary>
            <param name="decryptString">The string to be decrypted</param>
            <returns>Return decrypt the string</returns>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ErrorLevels.severe">
            <summary>
            严重的
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ErrorLevels.dangerous">
            <summary>
            危险的
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ErrorLevels.normal">
            <summary>
            一般的
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ErrorLevels.lesser">
            <summary>
            次要的
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ErrorLevels.debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ESession.IPData.gdDic">
            <summary>
            key: Id, value: data
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.ESession.SrcIPData.dic">
            <summary>
            key: Sets the class in which the data resides, value: IPData
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.IsLegalType(Newtonsoft.Json.Linq.JProperty)">
            <summary>
            是合法的 JToken 类型
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <returns>Returns an assigned data entity</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``1(System.Object)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``1(System.Object,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``1(System.Object,System.Func{``0,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``1(System.Object,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Boolean)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <returns>Returns an assigned data entity</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectWithChildModel``2(``1,System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <typeparam name="TT"></typeparam>
            <param name="srcObj"></param>
            <param name="funcVal"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToObjectFrom``2(``1,System.Boolean,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns the target object after the assignment</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``1(System.Object)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``1(System.Object,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``1(System.Object,System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Boolean)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Boolean,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <typeparam name="TT">The source data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <typeparam name="TT">The source data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectFrom``2(``1,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <typeparam name="TT">The source data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskObjectWithChildModel``2(``1,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The target data type</typeparam>
            <typeparam name="TT">The source data type</typeparam>
            <param name="srcObj">Data source entity</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned data entity of type task.</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListWithChildModel``2(System.Collections.IEnumerable,System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListWithChildModel``2(System.Collections.IEnumerable,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListWithChildModel``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListWithChildModel``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Boolean,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToListFrom``2(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <returns>Returns an assigned IList element collection object</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Boolean)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskIListWithChildModel``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{System.Object,System.Object,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned IList element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Boolean)">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.ExtMethod.ToTaskListFrom``2(System.Collections.Generic.IList{``1},System.Boolean,System.Func{System.Reflection.PropertyInfo,System.String,System.Boolean},System.Func{``0,``1,System.String,System.Object,System.Object})">
            <summary>
            Object property-relationship mapping assignments
            </summary>
            <typeparam name="T">The element type of the target data collection</typeparam>
            <typeparam name="TT">The element type of the data source collection</typeparam>
            <param name="srcList">Data source collection object</param>
            <param name="isTrySetVal">Try to execute set-method to set value of property.</param>
            <param name="funcAssign">When false is returned, no value is assigned to the current property</param>
            <param name="funcVal">Returns a value and assigns a value to the current property</param>
            <returns>Returns an assigned List element collection object of type task</returns>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.MixedCalculate.regexes">
            <summary>
            按运算符的优先级顺序来做匹配(数组元素的先后顺序决定运算符的优先级)
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.MultiTablesExec.tbDic">
            <summary>
            key: tableName_lower, value: List[string]
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Commons.MultiTablesExec._tableDic">
            <summary>
            key: tableName_lower, value: tableName
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Commons.MultiTablesExec.Tables">
            <summary>
            key: tableName_lower, value: tableName
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.XmlDoc.RootNode(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the root node of the XML and creates it if it does not exist
            </summary>
            <param name="nodeName">The name of the root node</param>
            <param name="attributes">Properties of the root node</param>
            <returns>Returns the root node</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.XmlDoc.RootNode(System.String)">
            <summary>
            Gets the root node of the XML and creates it if it does not exist
            </summary>
            <param name="nodeName">The name of the root node</param>
            <returns>Returns the root node</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Commons.XmlDoc.Load(System.String)">
            <summary>
            Loads a valid XML file and returns the root node if it exists
            </summary>
            <param name="xmlPath">The physical path to the XML file</param>
            <returns>Return the root node if it exist</returns>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.NoEquals">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.Greader">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.GreaderOrEquals">
            <summary>
            大于或等于
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.Less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.LessOrEquals">
            <summary>
            小于或等于
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.Contain">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.LeftContain">
            <summary>
            左边包含
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.RightContain">
            <summary>
            右边包含
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.In">
            <summary>
            In 条件
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.DataAccess.ConditionRelation.NotIn">
            <summary>
            not in 条件
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.ConditionItem.And(System.String,System.DJ.ImplementFactory.DataAccess.ConditionRelation,System.Object)">
            <summary>
            
            </summary>
            <param name="fieldName"></param>
            <param name="relation"></param>
            <param name="fieldValue">当为 数组 或 List 时采用in 例: and fieldName in (v1,v2)</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.ConditionItem.AndUnit(System.String,System.DJ.ImplementFactory.DataAccess.ConditionRelation,System.DJ.ImplementFactory.DataAccess.DbSqlBody)">
            <summary>
            
            </summary>
            <param name="fieldName"></param>
            <param name="relation"></param>
            <param name="dbSqlBody">例 and fieldName=(select top 1 userName from UserInfo)</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.ConditionItem.And(System.DJ.ImplementFactory.DataAccess.ConditionItem[])">
            <summary>
            
            </summary>
            <param name="conditionItems">例 and (fieldName1=fieldValue1 or fieldName2=fieldValue2 or fieldName3=fieldValue3)</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.DbSqlBody.OrderbyLazy(System.String,System.DJ.ImplementFactory.DataAccess.OrderbyItem[])">
            <summary>
            This method sets the properties of the current object, the rules for sorting of the object (when a lazy load is performed)
            </summary>
            <param name="fieldName">The current object property name</param>
            <param name="orderbyItems">Rules for sorting</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.DbSqlBody.WhereIgnore(System.String[])">
            <summary>
            Automatically generate a where condition (including properties with a Condition identifier) by setting the ignore property by this method
            </summary>
            <param name="fieldNames">Field names</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.DbSqlBody.WhereIgnoreLazy(System.String,System.String[])">
            <summary>
            Properties that ignore child objects when lazy loading is set by this method to generate a where condition (including properties with condition identifiers)
            </summary>
            <param name="fieldName">The current object property name</param>
            <param name="childFields">A collection of child object property names</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.DataAccess.DbSqlBody.CreateDataOpt(System.Collections.Generic.Dictionary{System.String,System.Object},System.Action{System.DJ.ImplementFactory.DataAccess.AbsDataModel,System.String,System.String},System.Action{System.String,System.Object,System.DJ.ImplementFactory.Commons.Attrs.Constraint,System.Reflection.PropertyInfo},System.Action)">
            <summary>
            
            </summary>
            <param name="fromUnitAction">tableName, where</param>
            <param name="propertyAction">fieldName, fieldValue</param>
            <param name="propEndAction">属性结束</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.DataAccess.SqlAnalysisImpl.AbsSqlAnalysis.DgtGetSqlOfPKV">
            <summary>
            获取主键最大值的 sql 语句
            </summary>
            <param name="primaryKeyName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:System.DJ.ImplementFactory.DCache.Attrs.DataCache">
            <summary>
            Enable data caching mechanism.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.DCache.Attrs.DataCache.#ctor">
            <summary>
            Enable data caching mechanism.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.DCache.Attrs.DataCache.#ctor(System.Int32)">
            <summary>
            Enable data caching mechanism.
            </summary>
            <param name="cacheTime_Second">Data cache lifecycle, in seconds</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.DCache.Attrs.DataCache.#ctor(System.Int32,System.Boolean)">
            <summary>
            Enable data caching mechanism.
            </summary>
            <param name="cacheTime_Second">Data cache lifecycle, in seconds</param>
            <param name="persistenceCache">Whether to enable the data cache persistence mechanism</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.DCache.Attrs.DataCache.#ctor(System.Boolean)">
            <summary>
            Enable data caching mechanism.
            </summary>
            <param name="persistenceCache">Whether to enable the data cache persistence mechanism</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.DCache.Attrs.DataCache.CacheTime">
            <summary>
            数据缓存生命周期,单位:秒
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.DCache.Attrs.DataCache.PersistenceCache">
            <summary>
            数据缓存持久化
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DataSyncMessage.DataSyncsName">
            <summary>
            Corresponds to the Name property value of the DataSyncs node in the MicroServiceRoute.xml configuration file
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Entities.InsertBatchStrategy.normalBatch">
            <summary>
            正常的批量 insert into tablename(fieldList) values(valueList1),(valueList2),(valueList3)
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Entities.InsertBatchStrategy.singleList">
            <summary>
            独立的列表 insert into tablename(fieldList) values(valueList1);insert into tablename(fieldList) values(valueList2)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.optByBatchMaxNumber">
            <summary>
            insert/update/delete 批量操作最大数量, 默认100条数据
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.optByBatchWaitSecond">
            <summary>
            insert/update/delete 执行最后的批量操作等待时间(秒), 默认3秒
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.sqlMaxLengthForBatch">
            <summary>
            insert/update/delete 批量操作 sql 表达式最大长度, 默认 50000
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.close">
            <summary>
            释放资源并关闭连接, true/false, 默认 false(释放资源但不关闭连接)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.dbConnectionFreeStrategy">
            <summary>
            数据库连接释放策略
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.insertBatchStrategy">
            <summary>
            批量插入策略
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.IsShowCode">
            <summary>
            是否显示临时dll组件对应的代码, 默认false[不显示], true[显示]
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.IsPrintSQLToTrace">
            <summary>
            输出sql语句到Visual Studio输出台
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.IsPrintSqlToLog">
            <summary>
            输出sql语句到日志
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.DbInfo.splitTable">
            <summary>
            分表存储及查询
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.LogsRange.upperLimit">
            <summary>
            上限值
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.LogsRange.lowerLimit">
            <summary>
            下限值
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.DllRelativePathOfImpl">
            <summary>
            [可选] - 实例类所在dll文件的相对路径,
            如果为空,表示实例类和exe文件属同一dll文件
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.ImplementNameSpace">
            <summary>
            [可选] - 指定实现interface类的实例所在的namespace
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.MatchImplExpression">
            <summary>
            [*必选*] - 匹配实现 interface 类的实例名称,可以是一个完整的类名称, 但不包含namespace.
            也可以是一个正则表达式
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.InterFaceName">
            <summary>
            [*必选*] - 接口名称, 可以是一个 namespace.interfaceClassName 完整的接口名称, 
            也可是interfaceClassName
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.IgnoreCase">
            <summary>
            [可选] - 匹配 MatchImplExpression 时是否忽略大小写, 默认true[忽略大小写], false[区分大小写]
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.MatchRule.IsShowCode">
            <summary>
            是否显示临时dll组件对应的代码, 默认false[不显示], true[显示]
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.SysConfig.Recomplie">
            <summary>
            是否启用重新编译机制
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.SysConfig.IsShowCode">
            <summary>
            显示所有参与编译的代码
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.TableDetail.Name">
            <summary>
            Table Name
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Entities.TableFieldInfo.Name">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.ImplementAdapter">
            <summary>
            Author: 代久 - Allan
            QQ: 564343162
            Email: 564343162@qq.com
            CreateDate: 2020-03-05
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.ImplementAdapter.Register(System.Object)">
            <summary>
            多继承的情况, 可以考虑使用此方法注册当前类
            </summary>
            <param name="currentObj"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.ImplementAdapter.GetConstructor(System.Type,System.Reflection.ParameterInfo[]@)">
            <summary>
            Get min quantity of parameters of constructor
            </summary>
            <param name="type"></param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.ImplementAdapter.IsIllegalImplType(System.Type)">
            <summary>
            是非法的实例类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.ImplementAdapter.MatchRules">
            <summary>
            配置文件配置规则(多项配置换行)：
            {DllRelativePathOfImpl="BLL.dll",ImplementNameSpace="BLL.SaleOrder",MatchImplExpression="^data.+",InterFaceName="IGetSaleOrderInfo",IgnoreCase=true}
            {DllRelativePathOfImpl="BLL.dll",ImplementNameSpace="BLL.MemberManage.impl",MatchImplExpression="^produce.+",InterFaceName="BLL.MemberManage.IProduceMaintain",IgnoreCase=true}
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSAllot.HttpHeaders(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Sets the Headers for the HttpClient access operation
            </summary>
            <param name="routeName">Target service name</param>
            <param name="controllerName">Controller name</param>
            <param name="actionName">The name of the routing action method</param>
            <returns>Returns the 'headers' parameter collection</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSAllot.HttpParameters(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Sets the Parameters for the HttpClient access operation
            </summary>
            <param name="routeName">Target service name</param>
            <param name="controllerName">Controller name</param>
            <param name="actionName">The name of the routing action method</param>
            <returns>Returns the 'parameters' parameter collection</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSAllot.UrlCollection(System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Dynamically set the access address of the target service cluster based on the service name
            </summary>
            <param name="routeName">Target service name</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSAllot.HttpVisitingException(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Receive information about exceptions that occurred during access
            </summary>
            <param name="routeName">Target service name</param>
            <param name="url">Http address</param>
            <param name="exceptionMessage">Exception message</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSFilterMessage.TokenKilled(System.String,System.String)">
            <summary>
            The interface method is triggered when the Token string in the MSFilter gateway reaches the end of life
            </summary>
            <param name="token">A valid token string</param>
            <param name="clientIP">Client IP address</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSFilterMessage.TokenUsed(System.String,System.String)">
            <summary>
            The interface method is triggered when the Token string is enabled in the MSFilter gateway
            </summary>
            <param name="token">A valid token string</param>
            <param name="clientIP">Client IP address</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSFilterMessage.TokenValidating(System.String,System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            Verify the legitimacy of tokens and clientIPs
            </summary>
            <param name="token">The token value passed in by the client</param>
            <param name="clientIP">Client IP address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
            <returns>A return value of true indicates that the token value is legal</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSFilterMessage.ClientIP(System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            Get client ip address
            </summary>
            <param name="ip">Client ip address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.AbsMSFilterMessage.MethodExecuted(System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            The called method has finished executing.
            </summary>
            <param name="ip">Client ip address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.AbsActionFilterAttribute.ForeachFields(System.Type,System.Action{System.String,System.String,System.Object})">
            <summary>
            遍历当前类后缀为 Mapping 的所有字段
            </summary>
            <param name="action">string: 原字段名称, string: 去除后缀 Mapping 的字段名, object: 字段值</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.AbsActionFilterAttribute.ForeachFields``1(System.Action{System.String,System.String,System.Object})">
            <summary>
            遍历当前类后缀为 Mapping 的所有字段
            </summary>
            <typeparam name="T">当前类</typeparam>
            <param name="action">string: 原字段名称, string: 去除后缀 Mapping 的字段名, object: 字段值</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute">
            <summary>
            Service interface local mapping interface class identifier
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.s_routeAttrDic">
            <summary>
            key: routeName_lower, value: RouteAttr
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.s_eleDic">
            <summary>
            key: routeName_lower, value: node
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.s_groupDic">
            <summary>
            key: groupsName_lower, value: groupsRoute
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.s_routeName_syncName">
            <summary>
            key: routeName_Lower, value: DataSyncs-Name
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.DataSyncDic">
            <summary>
            key: DataSyncs-Name_Lower, value: config and data
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.#ctor(System.String,System.String)">
            <summary>
            Service interface local mapping interface class identifier
            </summary>
            <param name="RouteName">The 'Name' attribute value of the 'Route' node in the 'MicroServiceRoute.xml' configuration file.</param>
            <param name="ControllerName">Remote Service Interface Controller Name</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.#ctor(System.String)">
            <summary>
            Service interface local mapping interface class identifier,The default current interface class name is the remote service interface controller name.
            </summary>
            <param name="RouteName">The 'Name' attribute value of the 'Route' node in the 'MicroServiceRoute.xml' configuration file.</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MicroServiceRoute.GroupsRouteVisit``1">
            <summary>
            Load the routing cluster
            </summary>
            <typeparam name="T">An interface type identified by the MicroServiceRoute property</typeparam>
            <returns>Returns the routed cluster interface instance class</returns>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSAddServiceRouteItemAction">
            <summary>
            In the MicroServiceRoute.xml file, add a new subkey under the Routes node, specify that the method parameters need to include: ServiceRouteName(RouteName), Uri, RegisterAddr(addr), RegisterActionType(actionType)
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSAddServiceRouteItemAction.#ctor">
            <summary>
            In the MicroServiceRoute.xml file, add a new subkey under the Routes node, specify that the method parameters need to include: ServiceRouteName(RouteName), Uri, RegisterAddr(addr), RegisterActionType(actionType)
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSAddServiceRouteItemAction.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            In the MicroServiceRoute.xml file, add a new subkey under the Routes node
            </summary>
            <param name="serviceRouteNameMapping">The parameter name of the ServiceRouteName mapping</param>
            <param name="uriMapping">The parameter name of the Uri mapping</param>
            <param name="registerAddrMapping">The parameter name of the RegisterAddr mapping</param>
            <param name="testAddrMapping">The parameter name of the testAddr mapping</param>
            <param name="contractKeyMapping">The parameter name of the contractKey mapping</param>
            <param name="registerActionTypeMapping">The parameter name of the RegisterActionType(Get|Post) mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSApiReceiverAction">
            <summary>
            Identifies a method as an API interface information receiving method
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSApiReceiverAction.#ctor">
            <summary>
            Identifies a method as an API interface information receiving method
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSApiReceiverAction.#ctor(System.String)">
            <summary>
            Identifies a method as an API interface information receiving method
            </summary>
            <param name="dataMapping">The parameter name of the Data mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSClientRegisterAction">
            <summary>
            Identify the client registration method, which must have a 'ContractKey' parameter of character type
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSClientRegisterAction.#ctor">
            <summary>
            Identify the client registration method, which must have a 'ContractKey' parameter of character type.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSClientRegisterAction.#ctor(System.String)">
            <summary>
            Identify the client registration method, which must have a 'ContractKey' parameter of character type.
            </summary>
            <param name="contractKeyMapping">The parameter name of the contractKey mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSConfiguratorAction">
            <summary>
            A method for setting the registration permission of client 'IP' in the SvrIPAddr.xml file, which must contain three parameters: 'startTime' and 'endTime' of date type, and 'contractKey' of string type
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSConfiguratorAction.#ctor">
            <summary>
            A method for setting the registration permission of client 'IP' in the SvrIPAddr.xml file, which must contain three parameters: 'startTime' and 'endTime' of date type, and 'contractKey' of string type
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSConfiguratorAction.#ctor(System.String,System.String,System.String)">
            <summary>
            A method for setting the registration permission of client 'IP' in the SvrIPAddr.xml file
            </summary>
            <param name="startTimeMapping">The parameter name of the StartTime mapping</param>
            <param name="endTimeMapping">The parameter name of the EndTime mapping</param>
            <param name="contractKeyMapping">The parameter name of the ContractKey mapping</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MServiceManagerConfigAction.#ctor">
            <summary>
            Identify the API method as receiving service manager related parameters and set them to a configuration file
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MServiceManagerConfigAction.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Identify the API method as receiving service manager related parameters and set them to a configuration file
            </summary>
            <param name="serviceNameMapping">The parameter name of the serviceName mapping</param>
            <param name="uriMapping">The parameter name of the http uri mapping</param>
            <param name="serviceManagerAddrMapping">The parameter name of the serviceManagerAddr mapping</param>
            <param name="serviceManagerActionTypeMapping">The parameter name of the serviceManagerActionType(Get|Post) mapping</param>
            <param name="testAddrMapping">The parameter name of the testAddr mapping</param>
            <param name="registerAddrMapping">The parameter name of the registerAddr mapping</param>
            <param name="registerActionTypeMapping">The parameter name of the registerActionType(Get|Post) mapping</param>
            <param name="contractKeyMapping">The parameter name of the contractKey mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter">
            <summary>
            The service gateway filter requires the use of the 'MSClientRegisterAction' attribute to specify the interface method used to accept client registration
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter.#ctor">
            <summary>
            The service gateway filter requires the use of the 'MSClientRegisterAction' attribute to specify the interface method used to accept client registration
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter.SetToken(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Int32)">
            <summary>
            Set up token filtering (ignore IP registration)
            </summary>
            <param name="context"></param>
            <param name="tokenKeyName">Set the keyName of the key-value pair Token in the parameters of the front-end HTTP request</param>
            <param name="token">The value of the token is set in the background for gateway filtering</param>
            <param name="liveCycle_Second">Set the lifetime of the token in seconds, and the default value is 3600 seconds, that is: 1 hour</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter.SetToken(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            Set up token filtering (ignore IP registration)
            </summary>
            <param name="context"></param>
            <param name="tokenKeyName">Set the keyName of the key-value pair Token in the parameters of the front-end HTTP request</param>
            <param name="token">The value of the token is set in the background for gateway filtering</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter.SetToken(System.String,System.String,System.String,System.Int32)">
            <summary>
            Set up token filtering (ignore IP registration)
            </summary>
            <param name="clientIP">Client ip address</param>
            <param name="tokenKeyName">Set the keyName of the key-value pair Token in the parameters of the front-end HTTP request</param>
            <param name="token">The value of the token is set in the background for gateway filtering</param>
            <param name="liveCycle_Second">Set the lifetime of the token in seconds, and the default value is 3600 seconds, that is: 1 hour</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSFilter.IsEnabledToken(System.String,System.String)">
            <summary>
            Determine the validity of the client token
            </summary>
            <param name="token">A valid token of client</param>
            <param name="clientIP">Client ip address</param>
            <returns></returns>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSRemoveServiceRouteItemAction">
            <summary>
            Remove the children under the Routes node in the MicroServiceRoute.xml file based on the Route-Name value
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSRemoveServiceRouteItemAction.#ctor">
            <summary>
            Remove the children under the Routes node in the MicroServiceRoute.xml file based on the Route-Name value
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSRemoveServiceRouteItemAction.#ctor(System.String)">
            <summary>
            Remove the children under the Routes node in the MicroServiceRoute.xml file based on the Route-Name value
            </summary>
            <param name="serviceRouteNameMapping">The parameter name of the ServiceRouteName mapping</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSUnlimited">
            <summary>
            Identify an external interface method without gateway 'MSFilter' restrictions
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.MSUnlimited.#ctor">
            <summary>
            Identify an external interface method without gateway 'MSFilter' restrictions.
            </summary>
        </member>
        <member name="T:System.DJ.ImplementFactory.MServiceRoute.Attrs.RequestMapping">
            <summary>
            Sets the mapping relationship between the current interface method and the remote service interface method.
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.RequestMapping.#ctor(System.String,System.DJ.ImplementFactory.Pipelines.MethodTypes)">
            <summary>
            Sets the mapping relationship between the current interface method and the remote service interface method.
            </summary>
            <param name="name">Remote interface method name</param>
            <param name="methodTypes">Remote Service Interface Method Access Mode (Get/Post)</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.Attrs.RequestMapping.#ctor(System.String)">
            <summary>
            Sets the mapping relationship between the current interface method and the remote service interface method.
            </summary>
            <param name="name">Remote interface method name</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.Attrs.RequestMapping.Name">
            <summary>
            Remote interface method name
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.Attrs.RequestMapping.MethodType">
            <summary>
            Remote Service Interface Method Access Mode (Get/Post)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.DataSyncExchange.MyMethod.ExecTime">
            <summary>
            执行次数
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.MSDataVisitor.map">
            <summary>
            key: routeName-controller-action, value: index
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.MSDataVisitor.timeoutUrlDic">
            <summary>
            key: ip and port, value: indexs
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.MSDataVisitor.isIllegalCall">
            <summary>
            It is illegal call.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.MService.Start">
            <summary>
            Start the service registration mechanism, which should be executed at project startup.
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.MService.PipleList.AddServiceRouteItemAction">
            <summary>
            MSAddServiceRouteItemAction
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.MService.PipleList.ClientRegisterAction">
            <summary>
            MSClientRegisterAction
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.MService.PipleList.ConfiguratorAction">
            <summary>
            MSConfiguratorAction
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.MServiceRoute.MService.PipleList.RemoveServiceRouteItemAction">
            <summary>
            MSRemoveServiceRouteItemAction
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.ServiceIPCollector.Monitor(System.DJ.ImplementFactory.MServiceRoute.ServiceManager.CallMethodInfo[])">
            <summary>
            Set by the accessed IP address, the invoked controller, or you can set the called method name
            </summary>
            <param name="callMethodInfos">Sets the type of controller being called, or the name of the method being called</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.ServiceIPCollector.GetIP(System.Object)">
            <summary>
            Obtain the corresponding client IP address based on the called controller object
            </summary>
            <param name="controller">The controller object that is called</param>
            <returns>Returns the client IP address</returns>
        </member>
        <member name="F:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPISchema.s_svrApiDic">
            <summary>
            key: ServiceName_Lower, value: ServiceApiCollection
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPISchema.Save(System.String,System.Object)">
            <summary>
            Save the configuration interface information data provided by the business function service
            </summary>
            <param name="ip">Client IP address</param>
            <param name="data">Configuration interface information data provided by business function services</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPISchema.Foreach(System.Action{System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPI})">
            <summary>
            Obtain the business function service configuration interface information data
            </summary>
            <param name="action">Obtain the business function service configuration interface information data</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPISchema.GetServiceNames">
            <summary>
            Get current all names of service
            </summary>
            <returns>Return a array of names of service</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceManager.SvrAPISchema.GetServiceAPIByServiceName(System.String)">
            <summary>
            Get the API for a service by service name
            </summary>
            <param name="serviceName">service name</param>
            <returns>Return the API for a service</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.MServiceRoute.ServiceRegisterMessage.isIllegalCall">
            <summary>
            It is called illegal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IAnalyzeSql.ExecuteMethodBefore(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.DataOptType,System.String,System.String@)">
            <summary>
            执行方法前
            </summary>
            <param name="method"></param>
            <param name="dataOptType"></param>
            <param name="sqlVarName"></param>
            <param name="sql"></param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IAnalyzeSql.ExecutingMethod(System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation,System.DJ.ImplementFactory.Pipelines.Pojo.PList{System.DJ.ImplementFactory.Pipelines.Pojo.Para},System.DJ.ImplementFactory.Pipelines.DataOptType,System.String,System.String@)">
            <summary>
            正在执行接口方法
            </summary>
            <param name="method"></param>
            <param name="paraList"></param>
            <param name="dataOptType"></param>
            <param name="sqlVarName"></param>
            <param name="sql"></param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.optByBatchMaxNumber">
            <summary>
            insert/update/delete 批量操作最大数量, 默认100条数据
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.optByBatchWaitSecond">
            <summary>
            insert/update/delete 执行最后的批量操作等待时间(秒), 默认3秒
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.sqlMaxLengthForBatch">
            <summary>
            insert/update/delete 批量操作 sql 表达式最大长度, 默认 50000
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.disposableAndClose">
            <summary>
            释放资源并关闭连接, true/false, 默认 false(释放资源但不关闭连接)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.isNormalBatchInsert">
            <summary>
            是否是常规的批量插入
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.splitTablesRule">
            <summary>
            分表匹配规则
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IDbHelper.splitTablesRecordQuantity">
            <summary>
            分表时单表最大记录量
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IDbHelper.TestDbConnectionState(System.DJ.ImplementFactory.Pipelines.IDataServerProvider,System.String,System.String@)">
            <summary>
            测试数据库连接状态
            </summary>
            <param name="dataServerProvider"></param>
            <param name="connectionString"></param>
            <param name="err"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IDbHelper.TestDbConnectionState(System.DJ.ImplementFactory.Pipelines.IDataServerProvider,System.String,System.Boolean,System.String@)">
            <summary>
            测试数据库连接状态
            </summary>
            <param name="dataServerProvider"></param>
            <param name="connectionString"></param>
            <param name="ignoreError"></param>
            <param name="err"></param>
            <returns></returns>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.IEntityCopy.AssignmentNo">
            <summary>
            赋值开关,当为 true 时表示仅赋值,不做数据变更操作,且每次给数据模型属性赋值后,AssignmentNo 都会被重置为 false
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IHttpHelper.SendData(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Boolean,System.Action{System.Object,System.String})">
            <summary>
            发送数据
            </summary>
            <param name="uri">访问地址</param>
            <param name="heads">head 参数</param>
            <param name="data">待发送的数据,支持 Dictionary 数据</param>
            <param name="isJson">是否是 json 数据, 如果不是以字节数组方式发送</param>
            <param name="action">参数1: 返回数据, 参数2: 返回错误信息</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IHttpHelper.SendData(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Boolean,System.DJ.ImplementFactory.Pipelines.MethodTypes,System.Action{System.Object,System.String})">
            <summary>
            发送数据
            </summary>
            <param name="uri">访问地址</param>
            <param name="heads">head 参数</param>
            <param name="data">待发送的数据,支持 Dictionary 数据</param>
            <param name="isJson">是否是 json 数据, 如果不是以字节数组方式发送</param>
            <param name="methodTypes"></param>
            <param name="action">参数1: 返回数据, 参数2: 返回错误信息</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Pipelines.IMixedCalculate">
            <summary>
            四则混合运算
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.UrlCollection(System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Dynamically set the access address of the target service cluster based on the service name
            </summary>
            <param name="routeName">Target service name</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.GetContractKey(System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Dynamically set contract key
            </summary>
            <param name="routeName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.GetMethodTypes(System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Dynamically set methodType: post\get
            </summary>
            <param name="routeName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.HttpHeaders(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Sets the Headers for the HttpClient access operation
            </summary>
            <param name="routeName">Target service name</param>
            <param name="controllerName">Controller name</param>
            <param name="actionName">The name of the routing action method</param>
            <returns>Returns the 'headers' parameter collection</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.HttpParameters(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Sets the Parameters for the HttpClient access operation
            </summary>
            <param name="routeName">Target service name</param>
            <param name="controllerName">Controller name</param>
            <param name="actionName">The name of the routing action method</param>
            <returns>Returns the 'parameters' parameter collection</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.GetSendData(System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Set data.
            </summary>
            <param name="routeName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSAllot.HttpVisitingException(System.String,System.String,System.String,System.Object,System.DJ.ImplementFactory.Pipelines.IExtMSDataVisitor)">
            <summary>
            Receive information about exceptions that occurred during access
            </summary>
            <param name="routeName">Target service name</param>
            <param name="url">Http address</param>
            <param name="exceptionMessage">Exception message</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSFilterMessage.TokenKilled(System.String,System.String)">
            <summary>
            The interface method is triggered when the Token string in the MSFilter gateway reaches the end of life
            </summary>
            <param name="token">A valid token string</param>
            <param name="clientIP">Client IP address</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSFilterMessage.TokenUsed(System.String,System.String)">
            <summary>
            The interface method is triggered when the Token string is enabled in the MSFilter gateway
            </summary>
            <param name="token">A valid token string</param>
            <param name="clientIP">Client IP address</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSFilterMessage.TokenValidating(System.String,System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            Verify the legitimacy of tokens and clientIPs
            </summary>
            <param name="token">The token value passed in by the client</param>
            <param name="clientIP">Client IP address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
            <returns>A return value of true indicates that the token value is legal</returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSFilterMessage.ClientIP(System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            Get client ip address
            </summary>
            <param name="ip">Client ip address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMSFilterMessage.MethodExecuted(System.String,System.Object,System.Reflection.MethodInfo)">
            <summary>
            The called method has finished executing.
            </summary>
            <param name="ip">Client ip address</param>
            <param name="controller">The controller class object being called</param>
            <param name="actionMethod">The method being called</param>
        </member>
        <member name="T:System.DJ.ImplementFactory.Pipelines.DataRowToObj">
            <summary>
            
            </summary>
            <param name="dataRow"></param>
            <param name="dic">key: columnNameLower, value: columnName</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.IMultiTablesExec.ExistMultiTables(System.String)">
            <summary>
            是存在多表
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.ResultVariantName">
            <summary>
            获取\设置接口方法返回结果变量名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.ResultTypeName">
            <summary>
            获取\设置接口方法返回值类型全名
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.ResultType">
            <summary>
            获取\设置接口方法返回值类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.InstanceVariantName">
            <summary>
            获取\设置接口实例变量名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.InterfaceMethodName">
            <summary>
            获取\设置接口方法名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.MethodParas">
            <summary>
            获取\设置接口方法参数变量名称字符串系列,多个用英文状态逗号相隔
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.GenericityParas">
            <summary>
            泛型参数
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.EnabledBuffer">
            <summary>
            在数据操作时, 是否启用缓存机制
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.IsAsync">
            <summary>
            是否需要执行异步加载数据
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.ActionParaName">
            <summary>
            action 参数名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodComponent.ActionType">
            <summary>
            action 参数类型
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType.Exclude">
            <summary>
            排除
            </summary>
        </member>
        <member name="F:System.DJ.ImplementFactory.Pipelines.Pojo.FieldsType.Contain">
            <summary>
            包含
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.ofInterfaceType">
            <summary>
            接口类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.ofInstanceType">
            <summary>
            实例类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.methodInfo">
            <summary>
            接口的系统方法信息对象
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.methodComponent">
            <summary>
            接口方法组件信息对象
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.StartSpace">
            <summary>
            设置\获取默认左缩进空间(空字符串)
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.AutoCallVarName">
            <summary>
            设置\获取AutoCall对象变量名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.ParaListVarName">
            <summary>
            设置\获取接口方法参数集合变量名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.dataProviderNamespace">
            <summary>
            设置\获取动态sql提供者实例所在名称空间
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.dataProviderClassName">
            <summary>
            设置\获取动态sql提供者实例类名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.ResultExecMethod">
            <summary>
            执行 select\count 查询后，结果执行方法，new string[] { nameSpace, className, methodName },
            该参数所指向的方法参数类型及返回值类型必须与数据接口方法返回值类型一至
            </summary>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.getSpace(System.Int32)">
            <summary>
            根据指定的tab数量获取左边代码空格空字符串
            </summary>
            <param name="tabNum">左边缩进tab数量</param>
            <returns></returns>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.append(System.String@,System.DJ.ImplementFactory.Pipelines.Pojo.LeftSpaceLevel,System.String,System.String[])">
            <summary>
            把需格式化的字符串附加到code字符串后，附加前在code字符串后加回车换行
            </summary>
            <param name="code">返回字符串附加后的结果</param>
            <param name="level">左边tab层级量(空字符串)</param>
            <param name="s">要附加的字符串</param>
            <param name="arr">格式化{0}、{1}..字符串待的替换字符系列</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.append(System.String@,System.DJ.ImplementFactory.Pipelines.Pojo.LeftSpaceLevel,System.String)">
            <summary>
            把普通字符串附加到code字符串后，附加前在code字符串后加回车换行
            </summary>
            <param name="code">返回字符串附加后的结果</param>
            <param name="level">左边tab层级量(空字符串)</param>
            <param name="s">要附加的字符串</param>
        </member>
        <member name="M:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.append(System.String@,System.String)">
            <summary>
            左边默认按照0个tab的缩进把普通字符串附加到code字符串后，附加前在code字符串后加回车换行
            </summary>
            <param name="code">返回字符串附加后的结果</param>
            <param name="s">要附加的字符串</param>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.paraList">
            <summary>
            设置\获取接口方法参数集合
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.fields">
            <summary>
            字段名称集合
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.fieldsType">
            <summary>
            指示字段名称集合类型是 Exclude(排除) 或 Contain(包含), 默认为 Exclude
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.MethodInformation.sqlExecType">
            <summary>
            sql 表达式执行类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.ParaType">
            <summary>
            获取\设置接口方法参数类型
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.ParaTypeName">
            <summary>
            获取\设置接口方法参数类型全名
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.ParaName">
            <summary>
            获取\设置接口方法参数名称
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.ParaValue">
            <summary>
            获取\设置接口方法参数值
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.IsGenericParameter">
            <summary>
            是否是泛型参数
            </summary>
        </member>
        <member name="P:System.DJ.ImplementFactory.Pipelines.Pojo.Para.ID">
            <summary>
            获取Para对象ID
            </summary>
        </member>
    </members>
</doc>
